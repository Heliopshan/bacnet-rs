[package]
name = "bacnet-rs"
version = "0.2.2"
edition = "2021"
authors = ["Tom van Hest <tomvanhest@pm.me>"]
description = "A complete BACnet protocol stack implementation in Rust"
documentation = "https://docs.rs/bacnet-rs"
homepage = "https://github.com/Heliopshan/bacnet-rs"
repository = "https://github.com/Heliopshan/bacnet-rs"
license = "MIT OR Apache-2.0"
readme = "README.md"
keywords = ["bacnet", "building-automation", "protocol", "networking", "iot"]
categories = ["network-programming", "embedded"]

[dependencies]
# Core dependencies
tokio = { version = "1.40", features = ["full"], optional = true }
bytes = { version = "1.7", default-features = false }
thiserror = { version = "1.0", optional = true }
serde = { version = "1.0", default-features = false, features = ["derive", "alloc"], optional = true }
bincode = "1.3"

# Networking
socket2 = { version = "0.5", optional = true }
if-addrs = { version = "0.13", optional = true }

# Logging
log = { version = "0.4", default-features = false }
env_logger = { version = "0.11", optional = true }

# Time handling
chrono = { version = "0.4", default-features = false, features = ["alloc", "clock"] }

# CRC calculations
crc = { version = "3.2", default-features = false }

# Hex encoding/decoding
hex = { version = "0.4", default-features = false, features = ["alloc"] }

# Optional async runtime
async-trait = { version = "0.1", optional = true }

# BACnet/SC (Secure Connect) dependencies
tokio-tungstenite = { version = "0.24", optional = true, features = ["native-tls"] }
tungstenite = { version = "0.24", optional = true }
native-tls = { version = "0.2", optional = true }
url = { version = "2.5", optional = true }
futures-util = { version = "0.3", optional = true }

[dev-dependencies]
criterion = "0.5"
proptest = "1.5"
tokio-test = "0.4"
ctrlc = "3.4"

[features]
default = ["std", "async", "serde"]
std = [
    "bytes/std",
    "thiserror",
    "serde?/std",
    "socket2",
    "if-addrs",
    "log/std",
    "chrono/std",
    "hex/std",
]
async = ["tokio", "async-trait", "std"]
bacnet-sc = ["async", "tokio-tungstenite", "tungstenite", "native-tls", "url", "futures-util"]
no-std = []

# Basic examples
[[example]]
name = "simple_device"
path = "examples/basic/simple_device.rs"
required-features = ["std"]

[[example]]
name = "advanced_device"
path = "examples/basic/advanced_device.rs"
required-features = ["std"]

[[example]]
name = "responder_device"
path = "examples/basic/responder_device.rs"
required-features = ["std"]

# Networking examples
[[example]]
name = "whois_scan"
path = "examples/networking/whois_scan.rs"
required-features = ["std"]

[[example]]
name = "routed_device_discovery"
path = "examples/networking/routed_device_discovery.rs"
required-features = ["std"]

[[example]]
name = "comprehensive_whois_scan"
path = "examples/networking/comprehensive_whois_scan.rs"
required-features = ["std"]

[[example]]
name = "transport_demo"
path = "examples/networking/transport_demo.rs"
required-features = ["std"]

[[example]]
name = "timeout_demo"
path = "examples/networking/timeout_demo.rs"
required-features = ["std"]

[[example]]
name = "bacnet_sc_node"
path = "examples/networking/bacnet_sc_node.rs"
required-features = ["bacnet-sc"]

# Object examples
[[example]]
name = "device_objects"
path = "examples/objects/device_objects.rs"
required-features = ["std"]

[[example]]
name = "object_database"
path = "examples/objects/object_database.rs"
required-features = ["std"]

# Communication examples
[[example]]
name = "test_client"
path = "examples/communication/test_client.rs"
required-features = ["std"]

# Utility examples
[[example]]
name = "util_demo"
path = "examples/utilities/util_demo.rs"
required-features = ["std"]

[[example]]
name = "vendor_lookup"
path = "examples/utilities/vendor_lookup.rs"
required-features = ["std"]

# Debugging examples
[[example]]
name = "debug_properties"
path = "examples/debugging/debug_properties.rs"
required-features = ["std"]

[[example]]
name = "debug_formatter"
path = "examples/debugging/debug_formatter.rs"
required-features = ["std"]

[[bench]]
name = "encoding"
harness = false

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
